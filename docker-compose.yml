version: '3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
      interval: 10s
      timeout: 10s
      retries: 5
  database:
    image: "postgres:13-alpine"
    container_name: database
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U calculator"]
      interval: 10s
      timeout: 10s
      retries: 5
  orchestrator:
    build:
      context: .
      dockerfile: orchestrator.Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
      database:
        condition: service_healthy
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - 8001:80
    env_file:
      - ./frontend/.env
  agent:
    build:
      context: .
      dockerfile: agent.Dockerfile
    env_file:
      - .env
    command:
      --threads ${AGENT_THREADS}
      --ping ${AGENT_PING}
      --wait ${AGENT_WAIT}
      --url ${RABBIT_URL}
    deploy:
      replicas: ${AGENT_SCALLING}
    restart: on-failure
    depends_on:
      rabbitmq:
        condition: service_healthy
networks:
  default:
    name: calc_network
